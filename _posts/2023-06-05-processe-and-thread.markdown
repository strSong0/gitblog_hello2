---
layout: post
title: processe and thread
date: 2023-06-05 00:00:00 +0300
description: You’ll find this post in your `_posts` directory. Go ahead and edit it and re-build the site to see your changes. # Add post description (optional)
img: processe.jpg # Add image post (optional)
tags: [Productivity, Software] # add tag
---

### 프로세스와 스레드
프로세스는 프로그램을 메모리 상에서 실행중인 작업을 뜻한다. 즉 운영체제에서의 프로세스는 하나의 작업 단위이다. 예를 들어 사용자가 더블클릭으로 프로그램을 실행시킨다면 그 프로그램은 프로세스가 되는것이다.

스레드는 프로세스 내에서 실행되는 작은 실행단위이다. 하나의 프로세스는 여러개의 스레드를 가질 수 있고, 각각의 스레드는 동일한 프로세스 내에서 공유된 메모리 공간을 사용하며, 스레드 간에 데이터를 공유 할 수 있다.

프로그램이 CPU에 의해 실행되면 프로세스가 생성 되고 메모리에 각각 별도의 '프로세스 주소 공간' 이 할당된다. (독립적)

프로세스 주소공간은 코드, 데이터, 힙, 스택 으로 이루어져 있다.

Code : 코드 자체를 구성하는 메모리 영역(프로그램 명령)

- 프로세스의 실행 코드가 저장되는 영역이다. 주로 실행할 프로그램의 명령어들이 위치하며, 읽기 전용으로 지정된다.

Data : 전역변수, 정적변수, 배열 등

- 전역 변수와 정적 변수가 저장되는 영역이다. 초기화 된 데이터와 초기화되지 않은 데이터를 포함하며, 읽기 및 쓰기가 가능하다.
- 초기화 된 데이터는 data 영역에 저장
- 초기화 되지 않은 데이터는 bss 영역에 저장

Heap : 동적 할당 시 사용 (new(), malloc() 등)

- 동적으로 할당되는 메모리가 저장되는 영역이다. 프로그램 실행 중에 동적으로 메모리를 할당하고 해제하는데 사용된다.

Stack : 지역변수, 매개변수, 리턴 값 (임시 메모리 영역)

- 지역변수와 함수 호출에 필요한 데이터가 저장되는 영역이다. 후입선출(LIFO) 방식으로 동작하며, 함수 호출 및 복귀, 지역변수의 생성 및 해제등을 관리한다.


프로세스 주소공간은 각각의 프로세스가 독립적인 메모리 공간을 가지므로, 하나의 프로세스에서 발생하는 메모리 접근 오류나 문제는 다른 프로세스에 영향을 주지 않는다. 이를 통해 각 프로세서는 안전하게 동작하고 데이터를 보호할 수 있다.


스레드는 stack만 따로 할당받고 나머지 영역은 서로 공유하기때문에 스레드 끼리는 서로 강하게 연결되어있다고 볼 수 있다.


정리하자면, 프로세스는 자신만의 고유 공간과 자원을 할당받아 사용하는데 반해, 스레드는 다른 스레드와 공간, 자원을 공유하면서 사용하는 차이가 존재한다.
